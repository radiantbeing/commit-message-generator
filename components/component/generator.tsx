"use client";

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/srdFSq71XFW
 */
import {
  CardTitle,
  CardDescription,
  CardHeader,
  CardContent,
  Card,
} from "~/components/ui/card";
import { Label } from "~/components/ui/label";
import { Input } from "~/components/ui/input";
import { Textarea } from "~/components/ui/textarea";
import { Button } from "~/components/ui/button";
import { ChangeEvent, FormEvent, useState } from "react";
import { ReloadIcon } from "@radix-ui/react-icons";

export function Generator() {
  const [inputs, setInputs] = useState({
    apiUrl: "http://localhost:11434",
    language: "",
    codeBeforeChange: "",
    codeAfterChange: "",
  });
  const [generatedMessage, setGeneratedMessage] = useState("");
  const [isLoading, setLoading] = useState(false);

  const handleChange = (
    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
  ) => {
    const { id, value } = e.target;
    setInputs({ ...inputs, [id]: value });
  };

  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();

    setLoading(true);

    fetch(`${inputs.apiUrl}/api/generate`, {
      method: "POST",
      body: JSON.stringify({
        model: "mistral",
        prompt: `You are a machine which return a Git commit message. You use ${inputs.language} as the programming language. I'll provide you with the code before and after the changes, so please give me the best commit message.

        Before the changes:
        ${inputs.codeBeforeChange}

        After the changes:
        ${inputs.codeAfterChange}
        
        Your response should only have a commit message.`,
        stream: false,
      }),
    })
      .then((res) => res.json())
      .then((data) => {
        setGeneratedMessage(data.response);
      })
      .catch((error) => {
        setGeneratedMessage("Error occurred!");
        throw error;
      })
      .finally(() => {
        setLoading(false);
      });
  };

  return (
    <main
      key="1"
      className="flex flex-col items-center justify-center min-h-screen py-2"
    >
      <Card className="w-full max-w-2xl mx-auto">
        <CardHeader>
          <CardTitle className="text-2xl">
            Git Commit Message Generator
          </CardTitle>
          <CardDescription>
            Provide the programming language, code before change, and code after
            change to generate a git commit message.
          </CardDescription>
        </CardHeader>
        <CardContent>
          <form className="space-y-4" onSubmit={handleSubmit}>
            <div className="space-y-2">
              <Label htmlFor="apiUrl">Ollama API URL</Label>
              <Input
                id="apiUrl"
                placeholder="Enter the Ollama API URL"
                value={inputs.apiUrl}
                onChange={handleChange}
                required
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="language">Programming Language</Label>
              <Input
                id="language"
                placeholder="Enter the programming language"
                value={inputs.language}
                onChange={handleChange}
                required
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="codeBeforeChange">Code Before Change</Label>
              <Textarea
                className="min-h-[100px]"
                id="codeBeforeChange"
                placeholder="Enter the code before change"
                value={inputs.codeBeforeChange}
                onChange={handleChange}
                required
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="codeAfterChange">Code After Change</Label>
              <Textarea
                className="min-h-[100px]"
                id="codeAfterChange"
                placeholder="Enter the code after change"
                value={inputs.codeAfterChange}
                onChange={handleChange}
                required
              />
            </div>
            <Button className="w-full" type="submit" disabled={isLoading}>
              {isLoading && (
                <ReloadIcon className="mr-2 h-4 w-4 animate-spin" />
              )}
              Generate Commit Message
            </Button>
          </form>
        </CardContent>
      </Card>
      <Card className="w-full max-w-2xl mx-auto mt-8">
        <CardHeader>
          <CardTitle className="text-2xl">Generated Commit Message</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="p-4 bg-gray-100 rounded-md dark:bg-gray-800">
            <p className="text-sm text-gray-500 dark:text-gray-400 font-mono whitespace-pre-wrap">
              {generatedMessage ||
                "Your generated commit message will appear here..."}
            </p>
          </div>
        </CardContent>
      </Card>
    </main>
  );
}
